# Generated by Django 5.0.3 on 2024-10-01 20:42

import ckeditor.fields
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('blog', '0001_initial'),
        ('main', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='VerifyPhone',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone', models.CharField(max_length=250)),
                ('code', models.CharField(max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('phone', models.CharField(max_length=100, null=True, unique=True)),
                ('email', models.EmailField(max_length=254, null=True)),
                ('first_name', models.CharField(blank=True, max_length=250, null=True)),
                ('last_name', models.CharField(blank=True, max_length=250, null=True)),
                ('is_superuser', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Application',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('for_kids', models.BooleanField(default=False)),
                ('status', models.IntegerField(choices=[(1, 'Yuborildi'), (2, 'Tekshirilmoqda'), (3, 'Qabul qilindi'), (4, 'Rad qilindi')], default=1)),
                ('first_name', models.CharField(max_length=250)),
                ('last_name', models.CharField(max_length=250)),
                ('phone', models.CharField(max_length=250)),
                ('city', models.CharField(max_length=250)),
                ('video', models.FileField(upload_to='application_videos/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('season', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.season')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Kasting',
                'verbose_name_plural': 'Kastinglar',
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('text_ru', models.TextField(null=True)),
                ('text_uz', models.TextField(null=True)),
                ('text_en', models.TextField(null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
                ('name_ru', models.CharField(max_length=250, null=True)),
                ('name_uz', models.CharField(max_length=250, null=True)),
                ('name_en', models.CharField(max_length=250, null=True)),
                ('main_page_image', models.FileField(upload_to='teachers/')),
                ('image', models.FileField(upload_to='teachers')),
                ('bio', ckeditor.fields.RichTextField()),
                ('bio_ru', ckeditor.fields.RichTextField(null=True)),
                ('bio_uz', ckeditor.fields.RichTextField(null=True)),
                ('bio_en', ckeditor.fields.RichTextField(null=True)),
                ('facebook_link', models.CharField(blank=True, max_length=250, null=True)),
                ('instagram_link', models.CharField(blank=True, max_length=250, null=True)),
                ('twitter_link', models.CharField(blank=True, max_length=250, null=True)),
                ('youtube_link', models.CharField(blank=True, max_length=250, null=True)),
                ('telegram_link', models.CharField(blank=True, max_length=250, null=True)),
                ('season', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='teachers', to='main.season')),
            ],
            options={
                'verbose_name': 'Uztoz',
                'verbose_name_plural': 'Uztozlar',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Participant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
                ('name_ru', models.CharField(max_length=250, null=True)),
                ('name_uz', models.CharField(max_length=250, null=True)),
                ('name_en', models.CharField(max_length=250, null=True)),
                ('image', models.FileField(upload_to='participants')),
                ('bio', ckeditor.fields.RichTextField()),
                ('bio_ru', ckeditor.fields.RichTextField(null=True)),
                ('bio_uz', ckeditor.fields.RichTextField(null=True)),
                ('bio_en', ckeditor.fields.RichTextField(null=True)),
                ('facebook_link', models.CharField(blank=True, max_length=250, null=True)),
                ('instagram_link', models.CharField(blank=True, max_length=250, null=True)),
                ('twitter_link', models.CharField(blank=True, max_length=250, null=True)),
                ('youtube_link', models.CharField(blank=True, max_length=250, null=True)),
                ('telegram_link', models.CharField(blank=True, max_length=250, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('season', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='participants', to='main.season')),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='participants', to='user.teacher')),
            ],
            options={
                'verbose_name': 'Ishtirokchi',
                'verbose_name_plural': 'Ishtirokchilar',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Winner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=250)),
                ('title_ru', models.CharField(max_length=250, null=True)),
                ('title_uz', models.CharField(max_length=250, null=True)),
                ('title_en', models.CharField(max_length=250, null=True)),
                ('image', models.FileField(upload_to='winner')),
                ('blog', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='winners', to='blog.blog')),
            ],
            options={
                'verbose_name': "G'olib",
                'verbose_name_plural': "G'oliblar",
            },
        ),
    ]
